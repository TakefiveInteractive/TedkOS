!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ADD_DRIVER	inc/known_drivers.h	/^#define ADD_DRIVER(/;"	d
ALIGN_4KB_ADDR	inc/x86/paging.h	/^#define ALIGN_4KB_ADDR /;"	d
ALIGN_4MB_ADDR	inc/x86/paging.h	/^#define ALIGN_4MB_ADDR /;"	d
ALL_OBJS	Makefile	/^ALL_OBJS:=boot.o $(CRTI_OBJ) $(CRTBEGIN_OBJ) $(OBJS) $(CRTEND_OBJ) $(CRTN_OBJ)$/;"	m
APPROX_PAGE_SIZE	tests/khello.cpp	/^#define APPROX_PAGE_SIZE /;"	d	file:
APPROX_PAGE_SIZE	tests/kreader.cpp	/^#define APPROX_PAGE_SIZE /;"	d	file:
APPROX_PAGE_SIZE	tests/krtc.cpp	/^#define APPROX_PAGE_SIZE /;"	d	file:
ASM	boot.S	/^#define ASM     1$/;"	d
ASM	x86/desc.S	/^#define ASM     1$/;"	d
ASM	x86/paging.S	/^#define ASM$/;"	d
ASSERT	inc/debug.h	/^#define ASSERT(/;"	d
ATTRIB	klibs/lib.c	/^#define ATTRIB /;"	d	file:
Abort	x86/err_handler.c	/^    Abort$/;"	e	enum:exception_type	file:
AbstractFS	inc/fs/filesystem.h	/^class AbstractFS {$/;"	c	namespace:filesystem
BUFSIZE	tests/khello.cpp	/^#define BUFSIZE /;"	d	file:
BUFSIZE	tests/kreader.cpp	/^#define BUFSIZE /;"	d	file:
BUFSIZE	tests/krtc.cpp	/^#define BUFSIZE /;"	d	file:
BUFSIZE	tests/kshell.cpp	/^#define BUFSIZE /;"	d	file:
BlockSize	inc/fs/kiss.h	/^    static const uint32_t BlockSize = 4096;$/;"	m	namespace:filesystem
CC	Makefile	/^CC=`.\/detect-gcc.sh`$/;"	m
CFLAGS_EXTRA	Makefile	/^release: CFLAGS_EXTRA = -ffat-lto-objects -flto -fno-use-linker-plugin -O2$/;"	m
CHECK_FLAG	mbi_info.cpp	/^#define CHECK_FLAG(/;"	d	file:
CLEAR_PAE	x86/paging.S	/^CLEAR_PAE       =   0xFFFFFFDF      # Use in CR4$/;"	d
CRTBEGIN_OBJ	Makefile	/^CRTBEGIN_OBJ:=$(shell $(CC) $(CFLAGS) -print-file-name=crtbegin.o)$/;"	m
CRTEND_OBJ	Makefile	/^CRTEND_OBJ:=$(shell $(CC) $(CFLAGS) -print-file-name=crtend.o)$/;"	m
CRTI_OBJ	Makefile	/^CRTI_OBJ=crti.o$/;"	m
CRTN_OBJ	Makefile	/^CRTN_OBJ=crtn.o$/;"	m
CURSOR_LOC_HIGH_REG	drivers/terminal.c	/^#define CURSOR_LOC_HIGH_REG /;"	d	file:
CURSOR_LOC_LOW_REG	drivers/terminal.c	/^#define CURSOR_LOC_LOW_REG /;"	d	file:
CXX	Makefile	/^CXX=`.\/detect-gcc.sh`$/;"	m
DEFINE_DRIVER_INIT	drivers/keyboard.c	/^DEFINE_DRIVER_INIT(kb) {$/;"	f
DEFINE_DRIVER_INIT	drivers/rtc.c	/^DEFINE_DRIVER_INIT(rtc)$/;"	f
DEFINE_DRIVER_INIT	drivers/terminal.c	/^DEFINE_DRIVER_INIT(term)$/;"	f
DEFINE_DRIVER_INIT	inc/driver.h	/^#define DEFINE_DRIVER_INIT(/;"	d
DEFINE_DRIVER_REMOVE	drivers/keyboard.c	/^DEFINE_DRIVER_REMOVE(kb) {$/;"	f
DEFINE_DRIVER_REMOVE	drivers/rtc.c	/^DEFINE_DRIVER_REMOVE(rtc)$/;"	f
DEFINE_DRIVER_REMOVE	drivers/terminal.c	/^DEFINE_DRIVER_REMOVE(term)$/;"	f
DEFINE_DRIVER_REMOVE	inc/driver.h	/^#define DEFINE_DRIVER_REMOVE(/;"	d
DIRECTORY	fs/kissfs.cpp	/^static const int DIRECTORY = 1;$/;"	m	namespace:filesystem	file:
DevFS	fs/devfs.cpp	/^DevFS::DevFS()$/;"	f	class:filesystem::DevFS
DevFS	inc/fs/dev.h	/^class DevFS : public AbstractFS {$/;"	c	namespace:filesystem
Dispatcher	fs/filesystem.cpp	/^Dispatcher::Dispatcher()$/;"	f	class:filesystem::Dispatcher
Dispatcher	inc/fs/filesystem.h	/^class Dispatcher {$/;"	c	namespace:filesystem
EFOPS	inc/error.h	/^#define EFOPS /;"	d
EINVAL	inc/error.h	/^#define EINVAL /;"	d
ENABLE_4MB_PAGE	x86/paging.S	/^ENABLE_4MB_PAGE =   0x00000010      # Use in CR4$/;"	d
ENOMEM	inc/error.h	/^#define ENOMEM /;"	d
ErrorCodeInExceptionBitField	x86/idt_table.cpp	/^const unsigned long int ErrorCodeInExceptionBitField = 0x40047D00;$/;"	v
FOpsCloseImpl	inc/fs/fops.h	/^typedef int32_t (*FOpsCloseImpl) (void* fdEntity);$/;"	t
FOpsOpenImpl	inc/fs/fops.h	/^typedef int32_t (*FOpsOpenImpl) (void* fdEntity);$/;"	t
FOpsReadImpl	inc/fs/fops.h	/^typedef int32_t (*FOpsReadImpl) (void* fdEntity, uint8_t *buf, int32_t bytes);$/;"	t
FOpsTable	inc/fs/fops.h	/^} FOpsTable;$/;"	t	typeref:struct:__anon4
FOpsWriteImpl	inc/fs/fops.h	/^typedef int32_t (*FOpsWriteImpl) (void* fdEntity, const uint8_t *buf, int32_t bytes);$/;"	t
Fault	x86/err_handler.c	/^    Fault,$/;"	e	enum:exception_type	file:
File	inc/fs/filesystem.h	/^struct File {$/;"	s	namespace:filesystem
Filename	inc/fs/filesystem.h	/^    Filename() { this->str = nullptr; }$/;"	f	class:filesystem::Filename
Filename	inc/fs/filesystem.h	/^    Filename(const char *s) { this->str = s; }$/;"	f	class:filesystem::Filename
Filename	inc/fs/filesystem.h	/^class Filename {$/;"	c	namespace:filesystem
FsSpecificData	inc/fs/filesystem.h	/^struct FsSpecificData {$/;"	s	namespace:filesystem
HIGH_BIT_MASK	inc/rtc.h	/^#define HIGH_BIT_MASK /;"	d
HashEntry	inc/lphashtable.h	/^        HashEntry()$/;"	f	class:util::HashEntry
HashEntry	inc/lphashtable.h	/^class HashEntry {$/;"	c	namespace:util
HashFunc	inc/fs/filesystem.h	/^struct HashFunc {$/;"	s	namespace:filesystem
ICW1	inc/i8259.h	/^#define ICW1 /;"	d
ICW2_MASTER	inc/i8259.h	/^#define ICW2_MASTER /;"	d
ICW2_SLAVE	inc/i8259.h	/^#define ICW2_SLAVE /;"	d
ICW3_MASTER	inc/i8259.h	/^#define ICW3_MASTER /;"	d
ICW3_SLAVE	inc/i8259.h	/^#define ICW3_SLAVE /;"	d
ICW4	inc/i8259.h	/^#define ICW4 /;"	d
INIT_INT_DESC	inc/x86/desc.h	/^#define INIT_INT_DESC(/;"	d
INIT_TRAP_DESC	inc/x86/desc.h	/^#define INIT_TRAP_DESC(/;"	d
INTERNAL_OBJS	Makefile	/^INTERNAL_OBJS:=boot.o $(CRTI_OBJ) $(OBJS) $(CRTN_OBJ)$/;"	m
Interrupt	x86/err_handler.c	/^    Interrupt,$/;"	e	enum:exception_type	file:
KB_ID	drivers/keyboard.c	/^#define KB_ID /;"	d	file:
KB_INT_NUM	drivers/keyboard.c	/^#define KB_INT_NUM /;"	d	file:
KB_IRQ_NUM	drivers/keyboard.c	/^#define KB_IRQ_NUM /;"	d	file:
KB_PORT	drivers/keyboard.c	/^#define KB_PORT /;"	d	file:
KBascii	drivers/keyboard.c	/^uint32_t KBascii[128] =$/;"	v
KD_POLICY	drivers/keyboard.c	/^#define KD_POLICY /;"	d	file:
KERNEL_CS_SEL	inc/x86/desc.h	/^#define KERNEL_CS_SEL /;"	d
KERNEL_DS_SEL	inc/x86/desc.h	/^#define KERNEL_DS_SEL /;"	d
KERNEL_LDT_SEL	inc/x86/desc.h	/^#define KERNEL_LDT_SEL /;"	d
KERNEL_TSS_SEL	inc/x86/desc.h	/^#define KERNEL_TSS_SEL /;"	d
KKC_ALT	inc/d2d/to_term.h	/^#define KKC_ALT /;"	d
KKC_BACKSPACE	inc/d2d/to_term.h	/^#define KKC_BACKSPACE /;"	d
KKC_CAPSLOCK	inc/d2d/to_term.h	/^#define KKC_CAPSLOCK /;"	d
KKC_CTRL	inc/d2d/to_term.h	/^#define KKC_CTRL /;"	d
KKC_DELETE	inc/d2d/to_term.h	/^#define KKC_DELETE /;"	d
KKC_DOWN	inc/d2d/to_term.h	/^#define KKC_DOWN /;"	d
KKC_END	inc/d2d/to_term.h	/^#define KKC_END /;"	d
KKC_ENTER	inc/d2d/to_term.h	/^#define KKC_ENTER /;"	d
KKC_ESC	inc/d2d/to_term.h	/^#define KKC_ESC /;"	d
KKC_F1	inc/d2d/to_term.h	/^#define KKC_F1 /;"	d
KKC_F10	inc/d2d/to_term.h	/^#define KKC_F10 /;"	d
KKC_F11	inc/d2d/to_term.h	/^#define KKC_F11 /;"	d
KKC_F12	inc/d2d/to_term.h	/^#define KKC_F12 /;"	d
KKC_F2	inc/d2d/to_term.h	/^#define KKC_F2 /;"	d
KKC_F3	inc/d2d/to_term.h	/^#define KKC_F3 /;"	d
KKC_F4	inc/d2d/to_term.h	/^#define KKC_F4 /;"	d
KKC_F5	inc/d2d/to_term.h	/^#define KKC_F5 /;"	d
KKC_F6	inc/d2d/to_term.h	/^#define KKC_F6 /;"	d
KKC_F7	inc/d2d/to_term.h	/^#define KKC_F7 /;"	d
KKC_F8	inc/d2d/to_term.h	/^#define KKC_F8 /;"	d
KKC_F9	inc/d2d/to_term.h	/^#define KKC_F9 /;"	d
KKC_HOME	inc/d2d/to_term.h	/^#define KKC_HOME /;"	d
KKC_INSERT	inc/d2d/to_term.h	/^#define KKC_INSERT /;"	d
KKC_LEFT	inc/d2d/to_term.h	/^#define KKC_LEFT /;"	d
KKC_PAGEDOWN	inc/d2d/to_term.h	/^#define KKC_PAGEDOWN /;"	d
KKC_PAGEUP	inc/d2d/to_term.h	/^#define KKC_PAGEUP /;"	d
KKC_PRESS	inc/d2d/to_term.h	/^#define KKC_PRESS /;"	d
KKC_PRSCR	inc/d2d/to_term.h	/^#define KKC_PRSCR /;"	d
KKC_PSBRK	inc/d2d/to_term.h	/^#define KKC_PSBRK /;"	d
KKC_RELEASE	inc/d2d/to_term.h	/^#define KKC_RELEASE /;"	d
KKC_RIGHT	inc/d2d/to_term.h	/^#define KKC_RIGHT /;"	d
KKC_SHIFT	inc/d2d/to_term.h	/^#define KKC_SHIFT /;"	d
KKC_SUPER	inc/d2d/to_term.h	/^#define KKC_SUPER /;"	d
KKC_TAB	inc/d2d/to_term.h	/^#define KKC_TAB /;"	d
KKC_UP	inc/d2d/to_term.h	/^#define KKC_UP /;"	d
KissFS	inc/fs/kiss.h	/^    class KissFS : public AbstractFS {$/;"	c	namespace:filesystem
LOAD_4KB_PAGE	inc/x86/paging.h	/^#define LOAD_4KB_PAGE(/;"	d
LOAD_4MB_PAGE	inc/x86/paging.h	/^#define LOAD_4MB_PAGE(/;"	d
LOAD_PAGE_TABLE	inc/x86/paging.h	/^#define LOAD_PAGE_TABLE(/;"	d
LinearProbingHashTable	inc/lphashtable.h	/^        LinearProbingHashTable() {}$/;"	f	class:util::LinearProbingHashTable
LinearProbingHashTable	inc/lphashtable.h	/^class LinearProbingHashTable {$/;"	c	namespace:util
Loop	x86/idt_table.cpp	/^class Loop {$/;"	c	file:
Loop	x86/idt_table.cpp	/^class Loop<0> {$/;"	c	file:
MASTER_8259_PORT	inc/i8259.h	/^#define MASTER_8259_PORT /;"	d
MAX_DEPTH	inc/i8259.h	/^#define MAX_DEPTH /;"	d
MULTIBOOT_BOOTLOADER_MAGIC	inc/multiboot.h	/^#define MULTIBOOT_BOOTLOADER_MAGIC /;"	d
MULTIBOOT_HEADER_FLAGS	inc/multiboot.h	/^#define MULTIBOOT_HEADER_FLAGS /;"	d
MULTIBOOT_HEADER_MAGIC	inc/multiboot.h	/^#define MULTIBOOT_HEADER_MAGIC /;"	d
MaxFilenameLength	inc/fs/filesystem.h	/^static const uint32_t MaxFilenameLength = 32;$/;"	m	namespace:filesystem
MaxMountableFilesystems	fs/filesystem.cpp	/^const size_t MaxMountableFilesystems = 4;$/;"	m	namespace:filesystem	file:
MaxNumFiles	inc/fs/kiss.h	/^    static const uint32_t MaxNumFiles = 64;$/;"	m	namespace:filesystem
MaxSystemFds	inc/fs/filesystem.h	/^static const int MaxSystemFds = 128;$/;"	m	namespace:filesystem
MemoryPool	inc/fixedmemorypool.h	/^    MemoryPool()$/;"	f	class:util::MemoryPool
MemoryPool	inc/fixedmemorypool.h	/^class MemoryPool$/;"	c	namespace:util
MultiBootInfoAddress	mbi_info.cpp	/^multiboot_info_t *MultiBootInfoAddress = NULL;$/;"	v
NORMAL_FILE	fs/kissfs.cpp	/^static const int NORMAL_FILE = 2;$/;"	m	namespace:filesystem	file:
NR_IRQS	inc/i8259.h	/^#define NR_IRQS /;"	d
NUM_ASCII_KKC	inc/d2d/to_term.h	/^#define NUM_ASCII_KKC /;"	d
NUM_COLS	klibs/lib.c	/^#define NUM_COLS /;"	d	file:
NUM_COMBINE_KKC	inc/d2d/to_term.h	/^#define NUM_COMBINE_KKC /;"	d
NUM_ROWS	klibs/lib.c	/^#define NUM_ROWS /;"	d	file:
NUM_SPECIAL_KKC	inc/d2d/to_term.h	/^#define NUM_SPECIAL_KKC /;"	d
NUM_TERMINALS	inc/terminal.h	/^#define NUM_TERMINALS /;"	d
NUM_VEC	inc/x86/desc_interrupts.h	/^#define NUM_VEC /;"	d
OBJS	Makefile	/^OBJS     = $(filter-out crtn.o, $(filter-out crti.o, $(filter-out boot.o,$(patsubst %.S,%.o,$(filter %.S,$(SRC))))))$/;"	m
OUTDIR	Makefile	/^OUTDIR = output\/$/;"	m
PD_ARR_ALGIN	inc/x86/paging.h	/^#define PD_ARR_ALGIN /;"	d
PD_BASE	inc/x86/paging.h	/^#define PD_BASE /;"	d
PD_DISABLE_CACHE	inc/x86/paging.h	/^#define PD_DISABLE_CACHE /;"	d
PD_NUM_ENTRIES	inc/x86/paging.h	/^#define PD_NUM_ENTRIES /;"	d
PD_WRITE_THROUGH	inc/x86/paging.h	/^#define PD_WRITE_THROUGH /;"	d
PG_4KB_BASE	inc/x86/paging.h	/^#define PG_4KB_BASE /;"	d
PG_4MB_BASE	inc/x86/paging.h	/^#define PG_4MB_BASE /;"	d
PG_DISABLE_CACHE	inc/x86/paging.h	/^#define PG_DISABLE_CACHE /;"	d
PG_GLOABL	inc/x86/paging.h	/^#define PG_GLOABL /;"	d
PG_NOT_ACCESSED	inc/x86/paging.h	/^#define PG_NOT_ACCESSED /;"	d
PG_NOT_DIRTY	inc/x86/paging.h	/^#define PG_NOT_DIRTY /;"	d
PG_NOT_USER	inc/x86/paging.h	/^#define PG_NOT_USER /;"	d
PG_READONLY	inc/x86/paging.h	/^#define PG_READONLY /;"	d
PG_USER	inc/x86/paging.h	/^#define PG_USER /;"	d
PG_WRITABLE	inc/x86/paging.h	/^#define PG_WRITABLE /;"	d
PG_WRITE_THROUGH	inc/x86/paging.h	/^#define PG_WRITE_THROUGH /;"	d
PIC_SPEC_EOI	inc/i8259.h	/^#define PIC_SPEC_EOI /;"	d
PT_ARR_ALGIN	inc/x86/paging.h	/^#define PT_ARR_ALGIN /;"	d
PT_BASE	inc/x86/paging.h	/^#define PT_BASE /;"	d
PT_DISABLE_CACHE	inc/x86/paging.h	/^#define PT_DISABLE_CACHE /;"	d
PT_NOT_ACCESSED	inc/x86/paging.h	/^#define PT_NOT_ACCESSED /;"	d
PT_NOT_USER	inc/x86/paging.h	/^#define PT_NOT_USER /;"	d
PT_NUM_ENTRIES	inc/x86/paging.h	/^#define PT_NUM_ENTRIES /;"	d
PT_READONLY	inc/x86/paging.h	/^#define PT_READONLY /;"	d
PT_USER	inc/x86/paging.h	/^#define PT_USER /;"	d
PT_WRITABLE	inc/x86/paging.h	/^#define PT_WRITABLE /;"	d
PT_WRITE_THROUGH	inc/x86/paging.h	/^#define PT_WRITE_THROUGH /;"	d
PrefixTree	inc/prefix_tree.h	/^    PrefixTree()$/;"	f	class:util::PrefixTree
PrefixTree	inc/prefix_tree.h	/^class PrefixTree {$/;"	c	namespace:util
PrefixTreeNode	inc/prefix_tree.h	/^class PrefixTreeNode {$/;"	c	namespace:util
REDIRECT_PAGE_DIR	inc/x86/paging.h	/^#define REDIRECT_PAGE_DIR(/;"	d
RELOAD_CR3	inc/x86/paging.h	/^#define RELOAD_CR3 /;"	d
RINGBUF_INIT	inc/klibs/ringbuf.h	/^#define RINGBUF_INIT(/;"	d
RINGBUF_SIZE	drivers/terminal.c	/^#define RINGBUF_SIZE /;"	d	file:
RINGBUF_SIZE	inc/fops_kb.h	/^#define RINGBUF_SIZE /;"	d
RINGBUF_SIZE	inc/klibs/ringbuf.h	/^#define RINGBUF_SIZE /;"	d
RINGBUF_SIZE	klibs/ringbuf.c	/^#define RINGBUF_SIZE /;"	d	file:
RINGBUF_TYPE	drivers/terminal.c	/^#define RINGBUF_TYPE /;"	d	file:
RINGBUF_TYPE	inc/fops_kb.h	/^#define RINGBUF_TYPE /;"	d
RINGBUF_TYPE	klibs/ringbuf.c	/^#define RINGBUF_TYPE /;"	d	file:
RTC_ADDRESS	inc/rtc.h	/^#define RTC_ADDRESS /;"	d
RTC_DATA	inc/rtc.h	/^#define RTC_DATA /;"	d
RTC_ID	inc/rtc.h	/^#define RTC_ID /;"	d
RTC_IRQ	inc/rtc.h	/^#define RTC_IRQ /;"	d
RTC_POLICY	inc/rtc.h	/^#define RTC_POLICY /;"	d
RTC_STATUS_A	inc/rtc.h	/^#define RTC_STATUS_A /;"	d
RTC_STATUS_A_NMI	inc/rtc.h	/^#define RTC_STATUS_A_NMI /;"	d
RTC_STATUS_B	inc/rtc.h	/^#define RTC_STATUS_B /;"	d
RTC_STATUS_B_EN	inc/rtc.h	/^#define RTC_STATUS_B_EN /;"	d
RTC_STATUS_B_NMI	inc/rtc.h	/^#define RTC_STATUS_B_NMI /;"	d
RTC_STATUS_C	inc/rtc.h	/^#define RTC_STATUS_C /;"	d
RTC_STATUS_C_NMI	inc/rtc.h	/^#define RTC_STATUS_C_NMI /;"	d
RTC_STATUS_D	inc/rtc.h	/^#define RTC_STATUS_D /;"	d
RTC_STATUS_D_NMI	inc/rtc.h	/^#define RTC_STATUS_D_NMI /;"	d
Reader	inc/fs/kiss.h	/^            Reader(uint8_t *startingAddr)$/;"	f	class:filesystem::Reader
Reader	inc/fs/kiss.h	/^    class Reader {$/;"	c	namespace:filesystem
SCREEN_HEIGHT	drivers/terminal.c	/^#define SCREEN_HEIGHT /;"	d	file:
SCREEN_WIDTH	drivers/terminal.c	/^#define SCREEN_WIDTH /;"	d	file:
SET_IDT_DESC_OFFSET	inc/x86/desc.h	/^#define SET_IDT_DESC_OFFSET(/;"	d
SET_LDT_PARAMS	inc/x86/desc.h	/^#define SET_LDT_PARAMS(/;"	d
SET_PG	x86/paging.S	/^SET_PG          =   0x80000000      # Use in CR0$/;"	d
SET_TSS_PARAMS	inc/x86/desc.h	/^#define SET_TSS_PARAMS(/;"	d
SLAVE_8259_PORT	inc/i8259.h	/^#define SLAVE_8259_PORT /;"	d
SLAVE_PIN	pic/i8259.c	/^#define SLAVE_PIN /;"	d	file:
SPECIAL_DEVICE	fs/kissfs.cpp	/^static const int SPECIAL_DEVICE = 0;$/;"	m	namespace:filesystem	file:
SPECIAL_PREFIX	drivers/keyboard.c	/^#define SPECIAL_PREFIX /;"	d	file:
SPINLOCK_LOCKED	inc/klibs/spinlock.h	/^#define SPINLOCK_LOCKED /;"	d
SPINLOCK_UNLOCKED	inc/klibs/spinlock.h	/^#define SPINLOCK_UNLOCKED /;"	d
SRC	Makefile	/^SRC =  $(wildcard **\/*.S) $(wildcard **\/*.c) $(wildcard *.S) $(wildcard *.c)$/;"	m
SRC_CPP	Makefile	/^SRC_CPP =  $(wildcard **\/*.cpp) $(wildcard *.cpp)$/;"	m
SkipStruct	inc/fs/kiss.h	/^    struct __attribute__ ((__packed__)) SkipStruct {$/;"	s	namespace:filesystem
TAB_WIDTH	drivers/terminal.c	/^#define TAB_WIDTH /;"	d	file:
TERM_BUFFER_SIZE	inc/terminal.h	/^#define TERM_BUFFER_SIZE /;"	d
TEXT_STYLE	drivers/terminal.c	/^#define TEXT_STYLE /;"	d	file:
TSS_SIZE	inc/x86/desc.h	/^#define TSS_SIZE /;"	d
Trap	x86/err_handler.c	/^    Trap,$/;"	e	enum:exception_type	file:
USER_CS_SEL	inc/x86/desc.h	/^#define USER_CS_SEL /;"	d
USER_DS_SEL	inc/x86/desc.h	/^#define USER_DS_SEL /;"	d
VIDEO	klibs/lib.c	/^#define VIDEO /;"	d	file:
VMEM_HEAD	drivers/terminal.c	/^#define VMEM_HEAD /;"	d	file:
ValAndLength	inc/prefix_tree.h	/^struct ValAndLength {$/;"	s	namespace:util
VectorExtractingMetaFunc	x86/idt_table.cpp	/^template<size_t index> struct VectorExtractingMetaFunc {$/;"	s	file:
_CPPLIB_H_	inc/klibs/cpplib.h	/^#define _CPPLIB_H_$/;"	d
_DEBUG_H	inc/debug.h	/^#define _DEBUG_H$/;"	d
_DEVSIDE_WRAPPER_H_	inc/fs/dev_wrapper.h	/^#define _DEVSIDE_WRAPPER_H_$/;"	d
_DRIVER_TO_KEYBOARD_H	inc/d2d/to_kb.h	/^#define _DRIVER_TO_KEYBOARD_H$/;"	d
_DRIVER_TO_TERMINAL_H	inc/d2d/to_term.h	/^#define _DRIVER_TO_TERMINAL_H$/;"	d
_ERR_HANDLER_H_	inc/x86/err_handler.h	/^#define _ERR_HANDLER_H_$/;"	d
_FILESYSTEM_H_	inc/fs/filesystem.h	/^#define _FILESYSTEM_H_$/;"	d
_FILESYSTEM_WRAPPER_H_	inc/fs/filesystem_wrapper.h	/^#define _FILESYSTEM_WRAPPER_H_$/;"	d
_FIXEDMEMORYPOOL_H_	inc/fixedmemorypool.h	/^#define _FIXEDMEMORYPOOL_H_$/;"	d
_FOPS_H	inc/fs/fops.h	/^#define _FOPS_H$/;"	d
_FS_DEV_H_	inc/fs/dev.h	/^#define _FS_DEV_H_$/;"	d
_FS_KISS_H_	inc/fs/kiss.h	/^#define _FS_KISS_H_$/;"	d
_I8259_EXTRA_H_	inc/i8259_extra.h	/^#define _I8259_EXTRA_H_$/;"	d
_I8259_H	inc/i8259.h	/^#define _I8259_H$/;"	d
_IDT_TABLE_H_	inc/x86/idt_table.h	/^#define _IDT_TABLE_H_$/;"	d
_INC_DRIVER_H	inc/driver.h	/^#define _INC_DRIVER_H$/;"	d
_KB_DRIVER_H	inc/keyboard.h	/^#define _KB_DRIVER_H$/;"	d
_KERNEL_ERRORS_H	inc/error.h	/^#define _KERNEL_ERRORS_H$/;"	d
_KEYBOARD_FOPS_H	inc/fops_kb.h	/^#define _KEYBOARD_FOPS_H$/;"	d
_KISS_WRAPPER_H_	inc/fs/kiss_wrapper.h	/^#define _KISS_WRAPPER_H_$/;"	d
_KLIBS_RINGBUF_H	inc/klibs/ringbuf.h	/^#define _KLIBS_RINGBUF_H$/;"	d
_LIB_H	inc/klibs/lib.h	/^#define _LIB_H$/;"	d
_LPHASHTABLE_H_	inc/lphashtable.h	/^#define _LPHASHTABLE_H_$/;"	d
_MBI_INFO_H_	inc/mbi_info.h	/^#define _MBI_INFO_H_$/;"	d
_MULTIBOOT_H	inc/multiboot.h	/^#define _MULTIBOOT_H$/;"	d
_PIC_ACTION_LIST_SIZE	pic/list.h	/^#define _PIC_ACTION_LIST_SIZE /;"	d
_PIC_PRIV_LIST_H	pic/list.h	/^#define _PIC_PRIV_LIST_H$/;"	d
_RTC_DRIVER_H	inc/rtc.h	/^#define _RTC_DRIVER_H$/;"	d
_SPINLOCK_H_	inc/klibs/spinlock.h	/^#define _SPINLOCK_H_$/;"	d
_TERMINAL_FOPS_H	inc/fops_term.h	/^#define _TERMINAL_FOPS_H$/;"	d
_TERMINAL_H	inc/terminal.h	/^#define _TERMINAL_H$/;"	d
_UTIL_PREFIX_TREE_H_	inc/prefix_tree.h	/^#define _UTIL_PREFIX_TREE_H_$/;"	d
_X86_DESC_H	inc/x86/desc.h	/^#define _X86_DESC_H$/;"	d
_X86_IDT_INIT_H	inc/x86/idt_init.h	/^#define _X86_IDT_INIT_H$/;"	d
_X86_PAGING_H	inc/x86/paging.h	/^#define _X86_PAGING_H$/;"	d
__cxa_pure_virtual	klibs/cpplib.cpp	/^void __cxa_pure_virtual ()$/;"	f
_devFS	inc/fs/filesystem.h	/^    AbstractFS *_devFS;$/;"	m	class:filesystem::Dispatcher
_entry	kernel.cpp	/^_entry (unsigned long magic, unsigned long addr)$/;"	f
_fini	crti.S	/^_fini:$/;"	l
_gdt	x86/desc.S	/^_gdt:$/;"	l
_idt	x86/desc.S	/^_idt:$/;"	l
_init	crti.S	/^_init:$/;"	l
_isSet	inc/lphashtable.h	/^        bool _isSet;$/;"	m	class:util::HashEntry
_kissFS	inc/fs/filesystem.h	/^    AbstractFS *_kissFS;  \/\/ this is public for cp2 cuz TAs have to test it$/;"	m	class:filesystem::Dispatcher
_macro_ringbuf_size	inc/klibs/ringbuf.h	/^    int32_t _macro_ringbuf_size;$/;"	m	struct:__anon6
_macro_ringbuf_type_size	inc/klibs/ringbuf.h	/^    int32_t _macro_ringbuf_type_size;$/;"	m	struct:__anon6
_start	boot.S	/^_start:$/;"	l
_tss	x86/desc.S	/^_tss:$/;"	l
actions	inc/i8259.h	/^    irqaction_list actions;$/;"	m	struct:__anon5
actionsLock	inc/i8259.h	/^    spinlock_t actionsLock;         \/* lock for the actions list *\/$/;"	m	struct:__anon5
add_action	pic/list.c	/^int add_action(irqaction_list* list, irq_good_handler_t handler, unsigned int policy_flags, unsigned int mask, unsigned int dev_id)$/;"	f
addr	inc/multiboot.h	/^	uint32_t addr;$/;"	m	struct:elf_section_header_table
addr	inc/x86/desc.h	/^	uint32_t addr;$/;"	m	struct:__anon8
ascii_shift_table	drivers/terminal-asm.S	/^ascii_shift_table:$/;"	l
avail	inc/x86/desc.h	/^			uint32_t avail : 1;$/;"	m	struct:seg_desc::__anon9::__anon10
base	inc/fs/filesystem.h	/^            uint8_t *base;$/;"	m	struct:filesystem::FsSpecificData::__anon2::__anon3
base_15_00	inc/x86/desc.h	/^			uint16_t base_15_00;$/;"	m	struct:seg_desc::__anon9::__anon10
base_23_16	inc/x86/desc.h	/^			uint8_t base_23_16;$/;"	m	struct:seg_desc::__anon9::__anon10
base_31_24	inc/x86/desc.h	/^			uint8_t base_31_24;$/;"	m	struct:seg_desc::__anon9::__anon10
base_addr_high	inc/multiboot.h	/^	uint32_t base_addr_high;$/;"	m	struct:memory_map
base_addr_low	inc/multiboot.h	/^	uint32_t base_addr_low;$/;"	m	struct:memory_map
basicPageDir	kernel.cpp	/^uint32_t basicPageDir[1024] __attribute__((aligned (4096)));$/;"	v
basicPageTable0	kernel.cpp	/^uint32_t basicPageTable0[1024] __attribute__((aligned (4096)));$/;"	v
bind_irq	pic/i8259.c	/^int bind_irq(unsigned int irq, unsigned int device_id,$/;"	f
boot_device	inc/multiboot.h	/^	uint32_t boot_device;$/;"	m	struct:multiboot_info
bss_end_addr	inc/multiboot.h	/^	uint32_t bss_end_addr;$/;"	m	struct:multiboot_header
caps_locked	drivers/terminal.c	/^static uint8_t caps_locked = 0;$/;"	v	file:
checksum	inc/multiboot.h	/^	uint32_t checksum;$/;"	m	struct:multiboot_header
children	inc/prefix_tree.h	/^    PrefixTreeNode<T> *children[256] = {};$/;"	m	class:util::PrefixTreeNode
clear	klibs/lib.c	/^void clear(void)$/;"	f
clear_screen_nolock	drivers/terminal.c	/^void clear_screen_nolock(void)$/;"	f
cli	inc/klibs/lib.h	/^#define cli(/;"	d
cli_and_save	inc/klibs/lib.h	/^#define cli_and_save(/;"	d
close	fs/devfs.cpp	/^bool DevFS::close(FsSpecificData *data)$/;"	f	class:filesystem::DevFS
close	fs/filesystem.cpp	/^int32_t Dispatcher::close(int32_t fd)$/;"	f	class:filesystem::Dispatcher
close	fs/kissfs.cpp	/^bool KissFS::close(FsSpecificData *fdData)$/;"	f	class:filesystem::KissFS
close	inc/fs/fops.h	/^    FOpsCloseImpl close;$/;"	m	struct:__anon4
cmdline	inc/multiboot.h	/^	uint32_t cmdline;$/;"	m	struct:multiboot_info
continue	boot.S	/^continue:$/;"	l
count	inc/prefix_tree.h	/^    size_t count;$/;"	m	class:util::PrefixTree
cr3	inc/x86/desc.h	/^	uint32_t cr3;$/;"	m	struct:tss_t
cs	inc/x86/desc.h	/^	uint16_t cs;$/;"	m	struct:tss_t
cs_pad	inc/x86/desc.h	/^	uint16_t cs_pad;$/;"	m	struct:tss_t
data	inc/klibs/ringbuf.h	/^    RINGBUF_TYPE data[RINGBUF_SIZE];$/;"	m	struct:__anon6
data	pic/list.h	/^	irqaction_t data[_PIC_ACTION_LIST_SIZE];$/;"	m	struct:__anon12
datablocks	inc/fs/kiss.h	/^    uint32_t datablocks[4096 \/ sizeof(uint32_t) - 1];$/;"	m	struct:inode_t
debug_trap	inc/x86/desc.h	/^	uint16_t debug_trap : 1;$/;"	m	struct:tss_t
debugf	inc/debug.h	/^#define debugf(/;"	d
dentries	inc/fs/kiss.h	/^        dentry_t dentries[MaxNumFiles];$/;"	m	class:filesystem::KissFS
dentryData	inc/fs/filesystem.h	/^        } dentryData;$/;"	m	union:filesystem::FsSpecificData::__anon2	typeref:struct:filesystem::FsSpecificData::__anon2::__anon3
dentryIndexOfFilename	inc/fs/kiss.h	/^        util::LinearProbingHashTable<133, Filename, uint32_t, HashFunc> dentryIndexOfFilename;$/;"	m	class:filesystem::KissFS
dentry_t	inc/fs/kiss.h	/^struct dentry_t {$/;"	s
depth	inc/i8259.h	/^    unsigned int depth;             \/* nested irq disables *\/$/;"	m	struct:__anon5
devFS	fs/filesystem.cpp	/^DevFS devFS;$/;"	m	namespace:filesystem	file:
dev_id	inc/i8259_extra.h	/^    unsigned int dev_id;     \/* A interger to differentiate different devices *\/$/;"	m	struct:irqaction_t
deviceOfFilename	inc/fs/dev.h	/^    util::LinearProbingHashTable<37, Filename, FOpsTable, HashFunc> deviceOfFilename;$/;"	m	class:filesystem::DevFS
disable_irq	pic/i8259.c	/^void disable_irq(uint32_t irq_num)$/;"	f
disable_irq_nolock	pic/i8259.c	/^static void disable_irq_nolock(uint32_t irq_num)$/;"	f	file:
dispatcher	fs/filesystem.cpp	/^Dispatcher dispatcher;$/;"	m	namespace:filesystem	file:
displayed_char	inc/terminal.h	/^    char displayed_char;$/;"	m	struct:__anon7
dpl	inc/x86/desc.h	/^			uint32_t dpl : 2;$/;"	m	struct:seg_desc::__anon9::__anon10
dpl	inc/x86/desc.h	/^		uint32_t dpl : 2;$/;"	m	struct:idt_desc_t::__anon11
driver_t	inc/driver.h	/^} driver_t;$/;"	t	typeref:struct:__anon1
ds	inc/x86/desc.h	/^	uint16_t ds;$/;"	m	struct:tss_t
ds_pad	inc/x86/desc.h	/^	uint16_t ds_pad;$/;"	m	struct:tss_t
eax	inc/x86/desc.h	/^	uint32_t eax;$/;"	m	struct:tss_t
ebp	inc/x86/desc.h	/^	uint32_t ebp;$/;"	m	struct:tss_t
ebx	inc/x86/desc.h	/^	uint32_t ebx;$/;"	m	struct:tss_t
ecx	inc/x86/desc.h	/^	uint32_t ecx;$/;"	m	struct:tss_t
edi	inc/x86/desc.h	/^	uint32_t edi;$/;"	m	struct:tss_t
edx	inc/x86/desc.h	/^	uint32_t edx;$/;"	m	struct:tss_t
eflags	inc/x86/desc.h	/^	uint32_t eflags;$/;"	m	struct:tss_t
eip	inc/x86/desc.h	/^	uint32_t eip;$/;"	m	struct:tss_t
elf_sec	inc/multiboot.h	/^	elf_section_header_table_t elf_sec;$/;"	m	struct:multiboot_info
elf_section_header_table	inc/multiboot.h	/^typedef struct elf_section_header_table$/;"	s
elf_section_header_table_t	inc/multiboot.h	/^} elf_section_header_table_t;$/;"	t	typeref:struct:elf_section_header_table
enable_irq	pic/i8259.c	/^void enable_irq(uint32_t irq_num)$/;"	f
enable_irq_nolock	pic/i8259.c	/^static void enable_irq_nolock(uint32_t irq_num)$/;"	f	file:
enable_paging	x86/paging.S	/^enable_paging:$/;"	l
entry	kernel.cpp	/^entry (unsigned long magic, unsigned long addr)$/;"	f
entry_addr	inc/multiboot.h	/^	uint32_t entry_addr;$/;"	m	struct:multiboot_header
es	inc/x86/desc.h	/^	uint16_t es;$/;"	m	struct:tss_t
es_pad	inc/x86/desc.h	/^	uint16_t es_pad;$/;"	m	struct:tss_t
esi	inc/x86/desc.h	/^	uint32_t esi;$/;"	m	struct:tss_t
esp	inc/x86/desc.h	/^	uint32_t esp;$/;"	m	struct:tss_t
esp0	inc/x86/desc.h	/^	uint32_t esp0;$/;"	m	struct:tss_t
esp1	inc/x86/desc.h	/^	uint32_t esp1;$/;"	m	struct:tss_t
esp2	inc/x86/desc.h	/^	uint32_t esp2;$/;"	m	struct:tss_t
exception_handler	x86/err_handler.c	/^void exception_handler(size_t vec, unsigned long int code)$/;"	f
exception_metadata	x86/err_handler.c	/^static const struct x86_exception_metadata_t exception_metadata[0x21] = {$/;"	v	typeref:struct:x86_exception_metadata_t	file:
exception_type	x86/err_handler.c	/^enum exception_type {$/;"	g	file:
exec	tests/kshell.cpp	/^int exec(int (*_main)(int32_t term, int32_t kb))$/;"	f
exec	x86/idt_table.cpp	/^    static inline void exec() {$/;"	f	class:Loop
fileOfFd	inc/fs/filesystem.h	/^    File *fileOfFd[MaxSystemFds];$/;"	m	class:filesystem::Dispatcher
filename	inc/fs/kiss.h	/^    char filename[33] = {};$/;"	m	struct:dentry_t
filesystem	fs/dev_wrapper.cpp	/^namespace filesystem {$/;"	n	file:
filesystem	fs/devfs.cpp	/^namespace filesystem {$/;"	n	file:
filesystem	fs/filesystem.cpp	/^namespace filesystem {$/;"	n	file:
filesystem	fs/kissfs.cpp	/^namespace filesystem {$/;"	n	file:
filesystem	fs/kissfs_wrapper.cpp	/^namespace filesystem {$/;"	n	file:
filesystem	inc/fs/dev.h	/^namespace filesystem {$/;"	n
filesystem	inc/fs/dev_wrapper.h	/^namespace filesystem {$/;"	n
filesystem	inc/fs/filesystem.h	/^namespace filesystem {$/;"	n
filesystem	inc/fs/kiss.h	/^namespace filesystem {$/;"	n
filesystem	inc/fs/kiss_wrapper.h	/^namespace filesystem {$/;"	n
filetype	inc/fs/filesystem.h	/^    uint8_t filetype;$/;"	m	struct:filesystem::FsSpecificData
filetype	inc/fs/kiss.h	/^    uint32_t filetype;$/;"	m	struct:dentry_t
find_action	pic/list.c	/^irqaction* find_action(irqaction_list* list, int deviceId_to_find, irq_good_handler_t handler_to_find)$/;"	f
first_action	pic/list.c	/^irqaction* first_action(irqaction_list* list)$/;"	f
flags	inc/multiboot.h	/^	uint32_t flags;$/;"	m	struct:multiboot_header
flags	inc/multiboot.h	/^	uint32_t flags;$/;"	m	struct:multiboot_info
fops_kb	drivers/terminal.c	/^FOpsTable fops_kb = {$/;"	v
fops_rtc	drivers/rtc.c	/^FOpsTable fops_rtc = {$/;"	v
fops_term	drivers/terminal.c	/^FOpsTable fops_term = {$/;"	v
frequency_converter	drivers/rtc.c	/^uint8_t frequency_converter(int freq)$/;"	f
fs	inc/fs/filesystem.h	/^    AbstractFS *fs;$/;"	m	struct:filesystem::File
fs	inc/x86/desc.h	/^	uint16_t fs;$/;"	m	struct:tss_t
fsSpecificData	inc/fs/filesystem.h	/^    FsSpecificData fsSpecificData;$/;"	m	struct:filesystem::File
fs_close	fs/filesystem_wrapper.cpp	/^int32_t fs_close(int32_t fd)$/;"	f
fs_open	fs/filesystem_wrapper.cpp	/^int32_t fs_open(const char *filename)$/;"	f
fs_pad	inc/x86/desc.h	/^	uint16_t fs_pad;$/;"	m	struct:tss_t
fs_read	fs/filesystem_wrapper.cpp	/^int32_t fs_read(int32_t fd, void *buf, int32_t nbytes)$/;"	f
fs_write	fs/filesystem_wrapper.cpp	/^int32_t fs_write(int32_t fd, const void *buf, int32_t nbytes)$/;"	f
fsceil	fs/kissfs.cpp	/^uint32_t fsceil(uint32_t len, uint32_t blkSize)$/;"	f	namespace:filesystem
gdt	x86/desc.S	/^gdt:$/;"	l
gdt_bottom	x86/desc.S	/^gdt_bottom:$/;"	l
gdt_ptr	x86/desc.S	/^gdt_ptr:$/;"	l
gdtr_val	x86/desc.S	/^gdtr_val:$/;"	l
gdtr_val_t	inc/x86/desc.h	/^} gdtr_val_t;$/;"	t	typeref:struct:__anon8
get	inc/fixedmemorypool.h	/^    T* get()$/;"	f	class:util::MemoryPool
get	inc/lphashtable.h	/^        To get(From key, bool& found)$/;"	f	class:util::LinearProbingHashTable
getKey	inc/lphashtable.h	/^        From getKey()$/;"	f	class:util::HashEntry
getValue	inc/lphashtable.h	/^        To getValue()$/;"	f	class:util::HashEntry
global_cr3val	x86/paging.S	/^global_cr3val:$/;"	l
granularity	inc/x86/desc.h	/^			uint32_t granularity : 1;$/;"	m	struct:seg_desc::__anon9::__anon10
gs	inc/x86/desc.h	/^	uint16_t gs;$/;"	m	struct:tss_t
gs_pad	inc/x86/desc.h	/^	uint16_t gs_pad;$/;"	m	struct:tss_t
halt	boot.S	/^halt:$/;"	l
handle_level_irq	pic/i8259.c	/^static void handle_level_irq(unsigned int irq, irq_desc_t* desc)$/;"	f	file:
handler	inc/i8259_extra.h	/^    irq_good_handler_t handler;$/;"	m	struct:irqaction_t
hasValue	inc/prefix_tree.h	/^    bool hasValue = false;$/;"	m	class:util::PrefixTreeNode
hash	inc/fs/filesystem.h	/^    static uint32_t hash(const Filename& s)$/;"	f	struct:filesystem::HashFunc
head	inc/klibs/ringbuf.h	/^    int32_t head;$/;"	m	struct:__anon6
head	pic/list.h	/^    irqaction_t *head, *tail;$/;"	m	struct:__anon12
header_addr	inc/multiboot.h	/^	uint32_t header_addr;$/;"	m	struct:multiboot_header
i8259_init	pic/i8259.c	/^void i8259_init(void)$/;"	f
idt	x86/desc.S	/^idt:$/;"	l
idt_bottom	x86/desc.S	/^idt_bottom:$/;"	l
idt_desc_t	inc/x86/desc.h	/^typedef union idt_desc_t {$/;"	u
idt_desc_t	inc/x86/desc.h	/^} idt_desc_t;$/;"	t	typeref:union:idt_desc_t
idtr_val	x86/desc.S	/^idtr_val:$/;"	l
idtr_val_t	inc/x86/desc.h	/^typedef gdtr_val_t idtr_val_t;$/;"	t
idx	inc/fs/filesystem.h	/^            uint32_t idx;$/;"	m	struct:filesystem::FsSpecificData::__anon2::__anon3
imageLength	inc/fs/kiss.h	/^        uint8_t imageLength;$/;"	m	class:filesystem::KissFS
imageStartingAddress	inc/fs/kiss.h	/^        uint8_t *imageStartingAddress;$/;"	m	class:filesystem::KissFS
inb	inc/klibs/lib.h	/^static inline uint32_t inb(uint16_t port)$/;"	f
init	fs/devfs.cpp	/^void DevFS::init()$/;"	f	class:filesystem::DevFS
init	fs/kissfs.cpp	/^void KissFS::init()$/;"	f	class:filesystem::KissFS
init	inc/driver.h	/^	void (*init)();$/;"	m	struct:__anon1
initFromMemoryAddress	fs/kissfs.cpp	/^void KissFS::initFromMemoryAddress(uint8_t *startingAddr, uint8_t *endingAddr)$/;"	f	class:filesystem::KissFS
init_from_multiboot	fs/kissfs_wrapper.cpp	/^void init_from_multiboot()$/;"	f	namespace:filesystem
init_idt	x86/idt_init.c	/^void init_idt(void)$/;"	f
init_idt_table	x86/idt_table.cpp	/^void init_idt_table()$/;"	f
init_list	pic/list.c	/^void init_list(irqaction_list* list)$/;"	f
inl	inc/klibs/lib.h	/^static inline uint32_t inl(uint16_t port)$/;"	f
inode	inc/fs/filesystem.h	/^        uint32_t inode;$/;"	m	union:filesystem::FsSpecificData::__anon2
inode	inc/fs/kiss.h	/^    uint32_t inode;$/;"	m	struct:dentry_t
inode_t	inc/fs/kiss.h	/^struct inode_t {$/;"	s
inodes	inc/fs/kiss.h	/^        inode_t inodes[MaxNumFiles];$/;"	m	class:filesystem::KissFS
insert	inc/prefix_tree.h	/^    void insert(const char *key, T val)$/;"	f	class:util::PrefixTree
interrupt_flag	drivers/rtc.c	/^volatile int interrupt_flag = 0;$/;"	v
interrupt_handler_with_number	x86/idt_init.c	/^void __attribute__((optimize("O0"))) interrupt_handler_with_number (size_t index, uint32_t code)$/;"	f
inw	inc/klibs/lib.h	/^static inline uint32_t inw(uint16_t port)$/;"	f
io_base_addr	inc/x86/desc.h	/^	uint16_t io_base_addr;$/;"	m	struct:tss_t
io_pad	inc/x86/desc.h	/^	uint16_t io_pad : 15;$/;"	m	struct:tss_t
irq_desc_t	inc/i8259.h	/^} irq_desc_t;$/;"	t	typeref:struct:__anon5
irq_descs	pic/i8259.c	/^irq_desc_t irq_descs [NR_IRQS];$/;"	v
irq_good_handler_t	inc/i8259_extra.h	/^typedef int (*irq_good_handler_t)(int irq, unsigned int dev_id);$/;"	t
irq_int_entry	pic/i8259.c	/^int irq_int_entry (int irq)$/;"	f
irqaction	inc/i8259_extra.h	/^} irqaction;$/;"	t	typeref:struct:irqaction_t
irqaction_list	pic/list.h	/^} irqaction_list;$/;"	t	typeref:struct:__anon12
irqaction_t	inc/i8259_extra.h	/^typedef irqaction irqaction_t;$/;"	t
irqaction_t	inc/i8259_extra.h	/^typedef struct irqaction_t {$/;"	s
isInvalidFd	fs/filesystem.cpp	/^bool Dispatcher::isInvalidFd(int32_t fd)$/;"	f	class:filesystem::Dispatcher
isSet	inc/lphashtable.h	/^        bool isSet()$/;"	f	class:util::HashEntry
isThisTerminalInUse	drivers/fops_kb.c	/^int8_t isThisTerminalInUse[NUM_TERMINALS] = {0};$/;"	v
isThisTerminalWaitingForEnter	drivers/fops_kb.c	/^int8_t isThisTerminalWaitingForEnter[NUM_TERMINALS] = {0};$/;"	v
iscmd	tests/kshell.cpp	/^#define iscmd(/;"	d	file:
itoa	klibs/lib.c	/^itoa(uint32_t value, char* buf, int32_t radix)$/;"	f
jtable	inc/fs/filesystem.h	/^        FOpsTable jtable;$/;"	m	union:filesystem::FsSpecificData::__anon2
kb	inc/keyboard.h	/^DEFINE_DRIVER_INIT(kb);$/;"	v
kb	inc/keyboard.h	/^DEFINE_DRIVER_REMOVE(kb);$/;"	v
kb	tests/kshell.cpp	/^int32_t term, kb;$/;"	v
kb_close	drivers/fops_kb.c	/^int32_t kb_close(void* fdEntity)$/;"	f
kb_handler	drivers/keyboard.c	/^int kb_handler(int irq, unsigned int saved_reg){$/;"	f
kb_open	drivers/fops_kb.c	/^int32_t kb_open(void* fdEntity)$/;"	f
kb_read	drivers/fops_kb.c	/^int32_t kb_read(void* fdEntity, uint8_t* buf, int32_t nbytes)$/;"	f
kb_to_term	drivers/terminal.c	/^void kb_to_term(uint32_t kernelKeycode)$/;"	f
kb_write	drivers/fops_kb.c	/^int32_t kb_write(void* fdEntity, const uint8_t* buf, int32_t nbytes)$/;"	f
keep_going	boot.S	/^keep_going:$/;"	l
kernel_enable_basic_paging	kernel.cpp	/^void kernel_enable_basic_paging()$/;"	f
key	inc/lphashtable.h	/^        From key;$/;"	m	class:util::HashEntry
keyboard_lock	drivers/keyboard.c	/^spinlock_t keyboard_lock = SPINLOCK_UNLOCKED;$/;"	v
khello_main	tests/khello.cpp	/^int khello_main (int32_t term, int32_t kb)$/;"	f
kissFS	fs/filesystem.cpp	/^KissFS kissFS;$/;"	m	namespace:filesystem	file:
known_drivers	inc/known_drivers.h	/^driver_t known_drivers[] = {$/;"	v
kreader_main	tests/kreader.cpp	/^int kreader_main (int32_t term, int32_t kb)$/;"	f
krtc_main	tests/krtc.cpp	/^int krtc_main (int32_t term, int32_t kb)$/;"	f
kshell_main	tests/kshell.cpp	/^int kshell_main ()$/;"	f
ldt	x86/desc.S	/^ldt:$/;"	l
ldt_bottom	x86/desc.S	/^ldt_bottom:$/;"	l
ldt_desc	x86/desc.S	/^ldt_desc:$/;"	l
ldt_pad	inc/x86/desc.h	/^	uint16_t ldt_pad;$/;"	m	struct:tss_t
ldt_segment_selector	inc/x86/desc.h	/^	uint16_t ldt_segment_selector;$/;"	m	struct:tss_t
ldt_selector	x86/desc.S	/^ldt_selector:$/;"	l
ldt_size	x86/desc.S	/^ldt_size:$/;"	l
len	inc/klibs/ringbuf.h	/^    int32_t len;$/;"	m	struct:__anon6
len	inc/prefix_tree.h	/^    size_t len;$/;"	m	struct:util::ValAndLength
length_high	inc/multiboot.h	/^	uint32_t length_high;$/;"	m	struct:memory_map
length_low	inc/multiboot.h	/^	uint32_t length_low;$/;"	m	struct:memory_map
lidt	inc/x86/desc.h	/^#define lidt(/;"	d
lldt	inc/x86/desc.h	/^#define lldt(/;"	d
load_addr	inc/multiboot.h	/^	uint32_t load_addr;$/;"	m	struct:multiboot_header
load_end_addr	inc/multiboot.h	/^	uint32_t load_end_addr;$/;"	m	struct:multiboot_header
lock	inc/i8259.h	/^    spinlock_t lock;                \/* lock for the eoi signal, and anything other than actions list *\/$/;"	m	struct:__anon5
lookup	inc/fs/filesystem.h	/^    util::PrefixTree<AbstractFS *> lookup;$/;"	m	class:filesystem::Dispatcher
ltr	inc/x86/desc.h	/^#define ltr(/;"	d
magic	inc/multiboot.h	/^	uint32_t magic;$/;"	m	struct:multiboot_header
mask	inc/i8259_extra.h	/^    unsigned int mask;$/;"	m	struct:irqaction_t
max	inc/fs/filesystem.h	/^            uint32_t max;$/;"	m	struct:filesystem::FsSpecificData::__anon2::__anon3
mbi_info	mbi_info.cpp	/^void mbi_info (unsigned long magic, unsigned long addr)$/;"	f
mem_lower	inc/multiboot.h	/^	uint32_t mem_lower;$/;"	m	struct:multiboot_info
mem_upper	inc/multiboot.h	/^	uint32_t mem_upper;$/;"	m	struct:multiboot_info
members	inc/fs/kiss.h	/^        uint8_t members[num];$/;"	m	struct:filesystem::SkipStruct
memcpy	klibs/lib.c	/^memcpy(void* dest, const void* src, uint32_t n)$/;"	f
memmove	klibs/lib.c	/^memmove(void* dest, const void* src, uint32_t n)$/;"	f
memory	inc/fixedmemorypool.h	/^    T memory[capacity];$/;"	m	class:util::MemoryPool
memory_map	inc/multiboot.h	/^typedef struct memory_map$/;"	s
memory_map_t	inc/multiboot.h	/^} memory_map_t;$/;"	t	typeref:struct:memory_map
memset	klibs/lib.c	/^memset(void* s, int32_t c, uint32_t n)$/;"	f
memset_dword	klibs/lib.c	/^memset_dword(void* s, int32_t c, uint32_t n)$/;"	f
memset_word	klibs/lib.c	/^memset_word(void* s, int32_t c, uint32_t n)$/;"	f
mmap_addr	inc/multiboot.h	/^	uint32_t mmap_addr;$/;"	m	struct:multiboot_info
mmap_length	inc/multiboot.h	/^	uint32_t mmap_length;$/;"	m	struct:multiboot_info
mod_end	inc/multiboot.h	/^	uint32_t mod_end;$/;"	m	struct:module
mod_start	inc/multiboot.h	/^	uint32_t mod_start;$/;"	m	struct:module
mods_addr	inc/multiboot.h	/^	uint32_t mods_addr;$/;"	m	struct:multiboot_info
mods_count	inc/multiboot.h	/^	uint32_t mods_count;$/;"	m	struct:multiboot_info
module	inc/multiboot.h	/^typedef struct module {$/;"	s
module_t	inc/multiboot.h	/^} module_t;$/;"	t	typeref:struct:module
mount	fs/filesystem.cpp	/^void Dispatcher::mount(AbstractFS *fs, const char *path)$/;"	f	class:filesystem::Dispatcher
mountAll	fs/filesystem.cpp	/^void Dispatcher::mountAll()$/;"	f	class:filesystem::Dispatcher
multiboot_header	inc/multiboot.h	/^typedef struct multiboot_header$/;"	s
multiboot_header_t	inc/multiboot.h	/^} multiboot_header_t;$/;"	t	typeref:struct:multiboot_header
multiboot_info	inc/multiboot.h	/^typedef struct multiboot_info$/;"	s
multiboot_info_t	inc/multiboot.h	/^} multiboot_info_t;$/;"	t	typeref:struct:multiboot_info
name	fs/kissfs.cpp	/^struct __attribute__ ((__packed__)) name_tmp { char name[MaxFilenameLength]; };$/;"	m	struct:filesystem::name_tmp	file:
name	inc/driver.h	/^	const char* name;$/;"	m	struct:__anon1
name	x86/err_handler.c	/^    char * name;$/;"	m	struct:x86_exception_metadata_t	file:
name_tmp	fs/kissfs.cpp	/^struct __attribute__ ((__packed__)) name_tmp { char name[MaxFilenameLength]; };$/;"	s	namespace:filesystem	file:
next	inc/i8259_extra.h	/^    struct irqaction_t *next, *prev; \/* not used for now *\/$/;"	m	struct:irqaction_t	typeref:struct:irqaction_t::irqaction_t
next_char_x	drivers/terminal.c	/^static uint32_t next_char_x = 0;$/;"	v	file:
next_char_y	drivers/terminal.c	/^static uint32_t next_char_y = 0;$/;"	v	file:
nop	inc/klibs/lib.h	/^#define nop(/;"	d
num	inc/multiboot.h	/^	uint32_t num;$/;"	m	struct:elf_section_header_table
numBlocks	inc/fs/kiss.h	/^        uint32_t numBlocks;$/;"	m	class:filesystem::KissFS
numDataBlocks	inc/fs/kiss.h	/^    uint32_t numDataBlocks;$/;"	m	struct:inode_t
numDentries	inc/fs/kiss.h	/^        uint32_t numDentries;$/;"	m	class:filesystem::KissFS
numFds	inc/fs/filesystem.h	/^    int numFds;$/;"	m	class:filesystem::Dispatcher
numInodes	inc/fs/kiss.h	/^        uint32_t numInodes;$/;"	m	class:filesystem::KissFS
numTotalDataBlocks	inc/fs/kiss.h	/^        uint32_t numTotalDataBlocks;$/;"	m	class:filesystem::KissFS
num_known_drivers	inc/known_drivers.h	/^const int num_known_drivers = sizeof(known_drivers) \/ sizeof(driver_t);$/;"	v
offset	inc/fs/filesystem.h	/^    size_t offset;$/;"	m	struct:filesystem::File
offset_15_00	inc/x86/desc.h	/^		uint16_t offset_15_00;$/;"	m	struct:idt_desc_t::__anon11
offset_31_16	inc/x86/desc.h	/^		uint16_t offset_31_16;$/;"	m	struct:idt_desc_t::__anon11
open	fs/devfs.cpp	/^bool DevFS::open(const char* filename, FsSpecificData *data)$/;"	f	class:filesystem::DevFS
open	fs/filesystem.cpp	/^int32_t Dispatcher::open(const char *filename)$/;"	f	class:filesystem::Dispatcher
open	fs/kissfs.cpp	/^bool KissFS::open(const char* filename, FsSpecificData *data)$/;"	f	class:filesystem::KissFS
open	inc/fs/fops.h	/^    FOpsOpenImpl open;$/;"	m	struct:__anon4
operator !=	inc/fs/filesystem.h	/^    bool operator != (const Filename& rhs) const {$/;"	f	class:filesystem::Filename
operator =	inc/fs/kiss.h	/^        const SkipStruct& operator= (const SkipStruct &source) const$/;"	f	struct:filesystem::SkipStruct
operator ==	inc/fs/filesystem.h	/^    bool operator == (const Filename& rhs) const {$/;"	f	class:filesystem::Filename
operator >>	inc/fs/kiss.h	/^            Reader& operator >> (T& val)$/;"	f	class:filesystem::Reader
operator []	inc/fs/filesystem.h	/^    const char operator [] (size_t idx) const { return str[idx]; };$/;"	f	class:filesystem::Filename
operator delete	inc/prefix_tree.h	/^    void operator delete(void *dp, MemoryPool<PrefixTreeNode<T>, 100>& hp)    { hp.release(dp); }$/;"	f	class:util::PrefixTreeNode
operator delete[]	inc/prefix_tree.h	/^    void operator delete[](void *dp, MemoryPool<PrefixTreeNode<T>, 100>& hp)  { hp.release(dp); }$/;"	f	class:util::PrefixTreeNode
operator new	inc/prefix_tree.h	/^    void *operator new(size_t s, MemoryPool<PrefixTreeNode<T>, 100>& hp)   { return hp.get(); }$/;"	f	class:util::PrefixTreeNode
operator new[]	inc/prefix_tree.h	/^    void *operator new[](size_t s, MemoryPool<PrefixTreeNode<T>, 100>& hp) { return hp.get(); }$/;"	f	class:util::PrefixTreeNode
opsize	inc/x86/desc.h	/^			uint32_t opsize : 1;$/;"	m	struct:seg_desc::__anon9::__anon10
orig_clear	klibs/lib.c	/^orig_clear(void)$/;"	f
orig_putc	klibs/lib.c	/^orig_putc(uint8_t c)$/;"	f
outb	inc/klibs/lib.h	/^#define outb(/;"	d
outl	inc/klibs/lib.h	/^#define outl(/;"	d
outw	inc/klibs/lib.h	/^#define outw(/;"	d
padding	inc/x86/desc.h	/^	uint16_t padding;$/;"	m	struct:__anon8
pending_kc	drivers/terminal.c	/^static uint32_t pending_kc = 0;$/;"	v	file:
pending_special	drivers/keyboard.c	/^int8_t  pending_special = 0;$/;"	v
policy_flags	inc/i8259_extra.h	/^    unsigned int policy_flags;$/;"	m	struct:irqaction_t
pool	inc/fs/filesystem.h	/^    util::MemoryPool<File, MaxSystemFds> pool;$/;"	m	class:filesystem::Dispatcher
pool	inc/prefix_tree.h	/^    MemoryPool<PrefixTreeNode<T>, 100> pool;$/;"	m	class:util::PrefixTree
present	inc/x86/desc.h	/^			uint32_t present : 1;$/;"	m	struct:seg_desc::__anon9::__anon10
present	inc/x86/desc.h	/^		uint32_t present : 1;$/;"	m	struct:idt_desc_t::__anon11
prev	inc/i8259_extra.h	/^    struct irqaction_t *next, *prev; \/* not used for now *\/$/;"	m	struct:irqaction_t	typeref:struct:irqaction_t::
prev_task_link	inc/x86/desc.h	/^	uint16_t prev_task_link;$/;"	m	struct:tss_t
prev_task_link_pad	inc/x86/desc.h	/^	uint16_t prev_task_link_pad;$/;"	m	struct:tss_t
printf	klibs/lib.c	/^printf(const char *format, ...)$/;"	f
put	inc/lphashtable.h	/^        void put(From key, To value)$/;"	f	class:util::LinearProbingHashTable
putc	klibs/lib.c	/^void putc(uint8_t c)$/;"	f
puts	klibs/lib.c	/^puts(const char* s)$/;"	f
raw_interrupt_handlers	x86/idt_table.cpp	/^vector_extracting_handler raw_interrupt_handlers[NUM_VEC];$/;"	v
read	fs/devfs.cpp	/^int32_t DevFS::read(FsSpecificData *data, uint32_t offset, uint8_t *buf, uint32_t len)$/;"	f	class:filesystem::DevFS
read	fs/filesystem.cpp	/^int32_t Dispatcher::read(int32_t fd, void *buf, int32_t nbytes)$/;"	f	class:filesystem::Dispatcher
read	fs/kissfs.cpp	/^int32_t KissFS::read(FsSpecificData *data, uint32_t offset, uint8_t *buf, uint32_t len)$/;"	f	class:filesystem::KissFS
read	inc/fs/fops.h	/^    FOpsReadImpl read;$/;"	m	struct:__anon4
read	inc/fs/kiss.h	/^            size_t read;$/;"	m	class:filesystem::Reader
readBlock	fs/kissfs.cpp	/^bool KissFS::readBlock(uint32_t datablockId, uint32_t offset, uint8_t *buf, uint32_t len)$/;"	f	class:filesystem::KissFS
readData	fs/kissfs.cpp	/^int32_t KissFS::readData(uint32_t inode, uint32_t offset, uint8_t *buf, uint32_t length)$/;"	f	class:filesystem::KissFS
readDentry	fs/kissfs.cpp	/^int32_t KissFS::readDentry(const uint8_t* fname, dentry_t* dentry)$/;"	f	class:filesystem::KissFS
readDentry	fs/kissfs.cpp	/^int32_t KissFS::readDentry(uint32_t index, dentry_t* dentry)$/;"	f	class:filesystem::KissFS
readDir	fs/kissfs.cpp	/^int32_t KissFS::readDir(FsSpecificData *data, uint32_t offset, uint8_t *buf, uint32_t len)$/;"	f	class:filesystem::KissFS
read_data	fs/kissfs_wrapper.cpp	/^int32_t read_data (uint32_t inode, uint32_t offset, uint8_t* buf, uint32_t length)$/;"	f
read_data	fs/kissfs_wrapper.cpp	/^int32_t read_data(const uint32_t inode, uint32_t offset, uint8_t *buf, uint32_t length)$/;"	f	namespace:filesystem
read_dentry	fs/kissfs_wrapper.cpp	/^int32_t read_dentry(const uint32_t index, dentry_t* dentry)$/;"	f	namespace:filesystem
read_dentry	fs/kissfs_wrapper.cpp	/^int32_t read_dentry(const uint8_t *fname, dentry_t *dentry)$/;"	f	namespace:filesystem
read_dentry_by_index	fs/kissfs_wrapper.cpp	/^int32_t read_dentry_by_index (uint32_t index, dentry_t* dentry)$/;"	f
read_dentry_by_name	fs/kissfs_wrapper.cpp	/^int32_t read_dentry_by_name (const uint8_t* fname, dentry_t* dentry)$/;"	f
registerDevice	fs/devfs.cpp	/^void DevFS::registerDevice(const char* path, const FOpsTable& jtable)$/;"	f	class:filesystem::DevFS
register_devfs	fs/dev_wrapper.cpp	/^    void register_devfs(const char* path, const FOpsTable& jtable)$/;"	f	namespace:filesystem
register_devfs	fs/dev_wrapper.cpp	/^void register_devfs(const char* path, FOpsTable jtable)$/;"	f
register_devfs	fs/filesystem.cpp	/^void Dispatcher::register_devfs(const char* path, const FOpsTable& jtable)$/;"	f	class:filesystem::Dispatcher
release	inc/fixedmemorypool.h	/^    void release(T* ptr)$/;"	f	class:util::MemoryPool
remove	inc/driver.h	/^	void (*remove)();$/;"	m	struct:__anon1
remove_action	pic/list.c	/^void remove_action(irqaction_list* list, irqaction* item)$/;"	f
reposition	inc/fs/kiss.h	/^            void reposition(size_t offset)$/;"	f	class:filesystem::Reader
reserved	inc/multiboot.h	/^	uint32_t reserved;$/;"	m	struct:module
reserved	inc/x86/desc.h	/^			uint32_t reserved : 1;$/;"	m	struct:seg_desc::__anon9::__anon10
reserved0	inc/x86/desc.h	/^		uint32_t reserved0 : 1;      \/\/ MUST be initialized to 0$/;"	m	struct:idt_desc_t::__anon11
reserved1	inc/x86/desc.h	/^		uint32_t reserved1 : 1;      \/\/ MUST be initialized to 1$/;"	m	struct:idt_desc_t::__anon11
reserved2	inc/x86/desc.h	/^		uint32_t reserved2 : 1;      \/\/ MUST be initialized to 1$/;"	m	struct:idt_desc_t::__anon11
reserved3	inc/x86/desc.h	/^		uint32_t reserved3 : 1;      \/\/ Interrupt Gate=0. Trap Gate=1$/;"	m	struct:idt_desc_t::__anon11
reserved4	inc/x86/desc.h	/^		uint8_t reserved4;           \/\/ This value MUST be initialized to 0$/;"	m	struct:idt_desc_t::__anon11
restore_flags	inc/klibs/lib.h	/^#define restore_flags(/;"	d
ringbuf_back	klibs/ringbuf.c	/^int ringbuf_back(ringbuf_t* buf, void* result)$/;"	f
ringbuf_back_nocp	klibs/ringbuf.c	/^void* ringbuf_back_nocp(ringbuf_t* buf)$/;"	f
ringbuf_front	klibs/ringbuf.c	/^int ringbuf_front(ringbuf_t* buf, void* result)$/;"	f
ringbuf_front_nocp	klibs/ringbuf.c	/^void* ringbuf_front_nocp(ringbuf_t* buf)$/;"	f
ringbuf_is_empty	klibs/ringbuf.c	/^int ringbuf_is_empty(ringbuf_t* buf)$/;"	f
ringbuf_length	klibs/ringbuf.c	/^int32_t ringbuf_length(ringbuf_t* buf)$/;"	f
ringbuf_pop_back	klibs/ringbuf.c	/^void ringbuf_pop_back(ringbuf_t* buf)$/;"	f
ringbuf_pop_front	klibs/ringbuf.c	/^void ringbuf_pop_front(ringbuf_t* buf)$/;"	f
ringbuf_push	klibs/ringbuf.c	/^void ringbuf_push(ringbuf_t* buf, void* item)$/;"	f
ringbuf_t	inc/klibs/ringbuf.h	/^} ringbuf_t;$/;"	t	typeref:struct:__anon6
root	inc/prefix_tree.h	/^    PrefixTreeNode<T> *root;$/;"	m	class:util::PrefixTree
rtc	inc/rtc.h	/^DEFINE_DRIVER_INIT(rtc);$/;"	v
rtc	inc/rtc.h	/^DEFINE_DRIVER_REMOVE(rtc);$/;"	v
rtc_change_frequency	drivers/rtc.c	/^void rtc_change_frequency(uint8_t rate)$/;"	f
rtc_close	drivers/rtc.c	/^int32_t rtc_close (void *fd)$/;"	f
rtc_handler	drivers/rtc.c	/^int rtc_handler(int irq, unsigned int saved_reg)$/;"	f
rtc_init	drivers/rtc.c	/^void rtc_init()$/;"	f
rtc_lock	drivers/rtc.c	/^spinlock_t rtc_lock = SPINLOCK_UNLOCKED;$/;"	v
rtc_open	drivers/rtc.c	/^int32_t rtc_open (void *fd)$/;"	f
rtc_read	drivers/rtc.c	/^int32_t rtc_read (void* fd, uint8_t* buf, int32_t nbytes)$/;"	f
rtc_write	drivers/rtc.c	/^int32_t rtc_write (void* fd, const uint8_t *buf, int32_t nbytes)$/;"	f
screen_x	klibs/lib.c	/^static int screen_x;$/;"	v	file:
screen_y	klibs/lib.c	/^static int screen_y;$/;"	v	file:
scroll_down_nolock	drivers/terminal.c	/^void scroll_down_nolock(void)$/;"	f
search	inc/prefix_tree.h	/^    ValAndLength<T> search(const char *key)$/;"	f	class:util::PrefixTree
seg_desc	inc/x86/desc.h	/^typedef struct seg_desc {$/;"	s
seg_desc_t	inc/x86/desc.h	/^} seg_desc_t;$/;"	t	typeref:struct:seg_desc
seg_lim_15_00	inc/x86/desc.h	/^			uint16_t seg_lim_15_00;$/;"	m	struct:seg_desc::__anon9::__anon10
seg_lim_19_16	inc/x86/desc.h	/^			uint32_t seg_lim_19_16 : 4;$/;"	m	struct:seg_desc::__anon9::__anon10
seg_selector	inc/x86/desc.h	/^		uint16_t seg_selector;$/;"	m	struct:idt_desc_t::__anon11
send_eoi	pic/i8259.c	/^void send_eoi(uint32_t irq_num)$/;"	f
send_eoi_nolock	pic/i8259.c	/^static void send_eoi_nolock(uint32_t irq_num)$/;"	f	file:
set	inc/lphashtable.h	/^        void set(From key, To val)$/;"	f	class:util::HashEntry
set_cursor_nolock	drivers/terminal.c	/^void set_cursor_nolock(uint32_t x, uint32_t y)$/;"	f
setup_irq	pic/i8259.c	/^static int setup_irq(unsigned int irq, unsigned int device_id,$/;"	f	file:
shndx	inc/multiboot.h	/^	uint32_t shndx;$/;"	m	struct:elf_section_header_table
show_char_at_nolock	drivers/terminal.c	/^static inline void show_char_at_nolock(uint32_t x, uint32_t y, uint8_t c)$/;"	f	file:
size	inc/fs/kiss.h	/^    uint32_t size;$/;"	m	struct:inode_t
size	inc/multiboot.h	/^	uint32_t size;$/;"	m	struct:elf_section_header_table
size	inc/multiboot.h	/^	uint32_t size;$/;"	m	struct:memory_map
size	inc/x86/desc.h	/^		uint32_t size : 1;           \/\/ Corresponds to "D" on IA-32 manual.$/;"	m	struct:idt_desc_t::__anon11
size	inc/x86/desc.h	/^	uint16_t size;$/;"	m	struct:__anon8
size	pic/list.h	/^    int size;           \/\/ How many data are actually stored$/;"	m	struct:__anon12
skip	inc/fs/kiss.h	/^            static const SkipStruct<num> skip()$/;"	f	class:filesystem::Reader
sp_kkc_handler	drivers/terminal.c	/^typedef void (*sp_kkc_handler)(uint32_t kernelKeycode);$/;"	t	file:
sp_kkc_handler_table	drivers/terminal-asm.S	/^sp_kkc_handler_table:$/;"	l
spin_is_locked	klibs/spinlock.c	/^uint32_t spin_is_locked(spinlock_t* lock)$/;"	f
spin_lock	klibs/spinlock.c	/^void spin_lock(spinlock_t* lock)$/;"	f
spin_lock_init	klibs/spinlock.c	/^void spin_lock_init(spinlock_t* lock)$/;"	f
spin_lock_irqsave	inc/klibs/spinlock.h	/^#define spin_lock_irqsave(/;"	d
spin_trylock	klibs/spinlock.c	/^uint32_t spin_trylock(spinlock_t* lock)$/;"	f
spin_unlock	klibs/spinlock.c	/^void spin_unlock(spinlock_t* lock)$/;"	f
spin_unlock_irqrestore	inc/klibs/spinlock.h	/^#define spin_unlock_irqrestore(/;"	d
spinlock_t	inc/klibs/spinlock.h	/^typedef uint32_t spinlock_t;$/;"	t
ss	inc/x86/desc.h	/^	uint16_t ss;$/;"	m	struct:tss_t
ss0	inc/x86/desc.h	/^	uint16_t ss0;$/;"	m	struct:tss_t
ss0_pad	inc/x86/desc.h	/^	uint16_t ss0_pad;$/;"	m	struct:tss_t
ss1	inc/x86/desc.h	/^	uint16_t ss1;$/;"	m	struct:tss_t
ss1_pad	inc/x86/desc.h	/^	uint16_t ss1_pad;$/;"	m	struct:tss_t
ss2	inc/x86/desc.h	/^	uint16_t ss2;$/;"	m	struct:tss_t
ss2_pad	inc/x86/desc.h	/^	uint16_t ss2_pad;$/;"	m	struct:tss_t
ss_pad	inc/x86/desc.h	/^	uint16_t ss_pad;$/;"	m	struct:tss_t
start	boot.S	/^start:$/;"	l
startingAddr	inc/fs/kiss.h	/^            uint8_t *startingAddr;$/;"	m	class:filesystem::Reader
status	inc/i8259.h	/^    unsigned int status;            \/* IRQ status, currently NOT used *\/$/;"	m	struct:__anon5
sti	inc/klibs/lib.h	/^#define sti(/;"	d
str	inc/fs/filesystem.h	/^    const char *str;$/;"	m	class:filesystem::Filename
strcpy	klibs/lib.c	/^strcpy(char* dest, const char* src)$/;"	f
string	inc/multiboot.h	/^	uint32_t string;$/;"	m	struct:module
strlen	klibs/lib.c	/^strlen(const char* s)$/;"	f
strncmp	klibs/lib.c	/^strncmp(const char* s1, const char* s2, uint32_t n)$/;"	f
strncpy	klibs/lib.c	/^strncpy(char* dest, const char* src, uint32_t n)$/;"	f
strrev	klibs/lib.c	/^strrev(char* s)$/;"	f
sys	inc/x86/desc.h	/^			uint32_t sys : 1;$/;"	m	struct:seg_desc::__anon9::__anon10
table	inc/lphashtable.h	/^        HashEntry<From, To> table[size] = {};$/;"	m	class:util::LinearProbingHashTable
tail	inc/klibs/ringbuf.h	/^    int32_t tail;$/;"	m	struct:__anon6
tail	pic/list.h	/^    irqaction_t *head, *tail;$/;"	m	struct:__anon12
term	inc/terminal.h	/^DEFINE_DRIVER_INIT(term);$/;"	v
term	inc/terminal.h	/^DEFINE_DRIVER_REMOVE(term);$/;"	v
term	tests/kshell.cpp	/^int32_t term, kb;$/;"	v
term2kb_readover	drivers/fops_kb.c	/^void term2kb_readover(int terminal_id)$/;"	f
term_backspace_handler	drivers/terminal.c	/^void term_backspace_handler(uint32_t keycode)$/;"	f
term_buf_item	inc/terminal.h	/^} term_buf_item;$/;"	t	typeref:struct:__anon7
term_capslock_handler	drivers/terminal.c	/^void term_capslock_handler(uint32_t keycode)$/;"	f
term_close	drivers/fops_term.c	/^int32_t term_close(void* fdEntity)$/;"	f
term_cls	drivers/terminal.c	/^void term_cls(void)$/;"	f
term_delete_buf	drivers/terminal.c	/^ringbuf_t term_delete_buf;$/;"	v
term_delete_handler	drivers/terminal.c	/^void term_delete_handler(uint32_t keycode)$/;"	f
term_enter_handler	drivers/terminal.c	/^void term_enter_handler(uint32_t keycode)$/;"	f
term_lock	drivers/terminal.c	/^spinlock_t term_lock = SPINLOCK_UNLOCKED;$/;"	v
term_none_handler	drivers/terminal.c	/^void term_none_handler(uint32_t keycode)$/;"	f
term_open	drivers/fops_term.c	/^int32_t term_open(void* fdEntity)$/;"	f
term_putc	drivers/terminal.c	/^void term_putc(uint8_t c)$/;"	f
term_read	drivers/fops_term.c	/^int32_t term_read(void* fdEntity, uint8_t* buf, int32_t nbytes)$/;"	f
term_read_buf	drivers/terminal.c	/^ringbuf_t term_read_buf;$/;"	v
term_tab_handler	drivers/terminal.c	/^void term_tab_handler(uint32_t keycode)$/;"	f
term_write	drivers/fops_term.c	/^int32_t term_write(void* fdEntity, const uint8_t* buf, int32_t nbytes)$/;"	f
termputarr	tests/khello.cpp	/^#define termputarr(/;"	d	file:
termputarr	tests/kreader.cpp	/^#define termputarr(/;"	d	file:
termputarr	tests/krtc.cpp	/^#define termputarr(/;"	d	file:
termputarr	tests/kshell.cpp	/^#define termputarr(/;"	d	file:
test_interrupts	klibs/lib.c	/^test_interrupts(void)$/;"	f
tss	x86/desc.S	/^tss:$/;"	l
tss_bottom	x86/desc.S	/^tss_bottom:$/;"	l
tss_desc	x86/desc.S	/^tss_desc:$/;"	l
tss_size	x86/desc.S	/^tss_size:$/;"	l
tss_t	inc/x86/desc.h	/^typedef struct __attribute__((packed)) tss_t {$/;"	s
tss_t	inc/x86/desc.h	/^} tss_t;$/;"	t	typeref:struct:tss_t
type	inc/multiboot.h	/^	uint32_t type;$/;"	m	struct:memory_map
type	inc/x86/desc.h	/^			uint32_t type : 4;$/;"	m	struct:seg_desc::__anon9::__anon10
type	x86/err_handler.c	/^    enum exception_type type;$/;"	m	struct:x86_exception_metadata_t	typeref:enum:x86_exception_metadata_t::exception_type	file:
unbind_irq	pic/i8259.c	/^void unbind_irq(unsigned int irq, unsigned int device_id)$/;"	f
unusedIndex	inc/fixedmemorypool.h	/^    int unusedIndex;$/;"	m	class:util::MemoryPool
unusedMemory	inc/fixedmemorypool.h	/^    T* unusedMemory[capacity];$/;"	m	class:util::MemoryPool
util	inc/fixedmemorypool.h	/^namespace util {$/;"	n
util	inc/lphashtable.h	/^namespace util {$/;"	n
util	inc/prefix_tree.h	/^namespace util {$/;"	n
val	inc/prefix_tree.h	/^    T val;$/;"	m	struct:util::ValAndLength
val	inc/x86/desc.h	/^		uint32_t val;$/;"	m	union:seg_desc::__anon9
val	inc/x86/desc.h	/^	uint32_t val;                    \/\/ ACTUALLY this UNION is 64-bits long !$/;"	m	union:idt_desc_t
value	inc/lphashtable.h	/^        To value;$/;"	m	class:util::HashEntry
value	inc/prefix_tree.h	/^    T value = T();$/;"	m	class:util::PrefixTreeNode
value	x86/idt_table.cpp	/^    static void __attribute__((optimize("O0"))) value(void) {   \/\/ Make sure the compiler doesn't try to be too clever$/;"	f	struct:VectorExtractingMetaFunc
vector_extracting_handler	inc/x86/idt_table.h	/^typedef void (*vector_extracting_handler)(void);$/;"	t
video_mem	drivers/terminal.c	/^static char* video_mem = VMEM_HEAD;$/;"	v	file:
video_mem	klibs/lib.c	/^static char* video_mem = (char *)VIDEO;$/;"	v	file:
write	fs/devfs.cpp	/^int32_t DevFS::write(FsSpecificData *data, uint32_t offset, const uint8_t *buf, uint32_t len)$/;"	f	class:filesystem::DevFS
write	fs/filesystem.cpp	/^int32_t Dispatcher::write(int32_t fd, const void *buf, int32_t nbytes)$/;"	f	class:filesystem::Dispatcher
write	fs/kissfs.cpp	/^int32_t KissFS::write(FsSpecificData *data, uint32_t offset, const uint8_t *buf, uint32_t len)$/;"	f	class:filesystem::KissFS
write	inc/fs/fops.h	/^    FOpsWriteImpl write;$/;"	m	struct:__anon4
x86_exception_metadata_t	x86/err_handler.c	/^struct x86_exception_metadata_t {$/;"	s	file:
x_offset	inc/terminal.h	/^    uint32_t x_offset;$/;"	m	struct:__anon7
y_offset	inc/terminal.h	/^    uint8_t y_offset;$/;"	m	struct:__anon7
