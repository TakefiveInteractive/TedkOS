#
#
DESTDIR =
VPATH = @srcdir@ @srcdir@/.. @srcdir@/../..
srcdir = @srcdir@
objdir = .
srcroot = $(srcdir)/../../..
objroot = $(objdir)/../../..

prefix = @prefix@
exec_prefix = @exec_prefix@

host_alias = @host_alias@
target_alias = @target_alias@

bindir = @bindir@
libdir = @libdir@
tooldir = $(exec_prefix)/$(target_alias)

objtype = @objtype@

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@

# Multilib support variables.
# TOP is used instead of MULTI{BUILD,SRC}TOP.
MULTISRCTOP =
MULTIBUILDTOP =
MULTIDIRS =
MULTISUBDIR =
MULTIDO = true
MULTICLEAN = true

SHELL =	/bin/sh

CC = @CC@

AS = @AS@
AR = @AR@
LD = @LD@
RANLIB = @RANLIB@

CPU_INIT_OBJS = rdimon-aem.o
CPU_INIT_INSTALL = install-cpu-init

CFLAGS		= -g

# Host specific makefile fragment comes in here.
@host_makefile_frag@

.PHONY: all
all: ${CPU_INIT_OBJS}

#
# here's where we build the test programs for each target
#
.PHONY: test
test:

# Static pattern rule for assembling cpu init files to object files.
${CPU_INIT_OBJS}: %.o: %.S
	$(CC) $(CFLAGS_FOR_TARGET) $(CFLAGS) $(INCLUDES) -DARM_RDI_MONITOR -o $@ -c $<

clean mostlyclean:
	rm -f a.out core *.i *.o *-test *.srec *.dis *.x

distclean maintainer-clean realclean: clean
	rm -f Makefile *~

.PHONY: install info install-info clean-info
install: ${CPU_INIT_INSTALL}

install-cpu-init:
	test -d $(DESTDIR)${tooldir}/lib${MULTISUBDIR}/cpu-init || mkdir $(DESTDIR)${tooldir}/lib${MULTISUBDIR}/cpu-init
	set -e; for x in ${CPU_INIT_OBJS}; do ${INSTALL_DATA} $$x $(DESTDIR)${tooldir}/lib${MULTISUBDIR}/cpu-init/$$x; done

doc:
info:
install-info:
clean-info:

Makefile: Makefile.in ../config.status @host_makefile_frag_path@
	$(SHELL) ../config.status --file cpu-init/Makefile

../config.status: ../configure
	$(SHELL) ../config.status --recheck
